// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : dsp_wrapper.v
// Device     : gemini
// LiteX sha1 : 611b84cc
// Date       : 2023-03-02 16:38:17
//------------------------------------------------------------------------------
// This file is Copyright (c) 2022 RapidSilicon
//--------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module dsp_wrapper (
    input  wire   [19:0] a,
    input  wire   [17:0] b,
    input  wire   [19:0] c,
    input  wire   [17:0] d,
    output wire   [37:0] z
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire   [19:0] a_1;
wire   [17:0] b_1;
wire   [19:0] c_1;
wire   [17:0] d_1;
wire   [38:0] z1;
wire   [38:0] z2;
wire   [38:0] z_1;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign a_1 = a;
assign b_1 = b;
assign c_1 = c;
assign d_1 = d;
assign z = z_1;
assign z_1 = (z1 + z2);


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

RS_DSP_MULT #(
	.MODE_BITS(1'd0)
) RS_DSP_MULT (
	.a(a_1),
	.b(b_1),
	.feedback(1'd0),
	.unsigned_a(1'd1),
	.unsigned_b(1'd1),
	.z(z1)
);

RS_DSP_MULT #(
	.MODE_BITS(1'd0)
) RS_DSP_MULT_1 (
	.a(c_1),
	.b(d_1),
	.feedback(1'd0),
	.unsigned_a(1'd1),
	.unsigned_b(1'd1),
	.z(z2)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2023-03-02 16:38:17.
//------------------------------------------------------------------------------
