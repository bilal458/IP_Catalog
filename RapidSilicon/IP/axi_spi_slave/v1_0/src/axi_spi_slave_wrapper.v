// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : axi_spi_slave_wrapper.v
// Device     : gemini
// LiteX sha1 : c24bbedb
// Date       : 2022-09-19 12:53:23
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module axi_spi_slave_wrapper (
	input  wire axi_aclk,
	input  wire axi_aresetn,
	output wire axi_master_awvalid,
	input  wire axi_master_awready,
	output wire [31:0] axi_master_awaddr,
	output wire [1:0] axi_master_awburst,
	output wire [7:0] axi_master_awlen,
	output wire [3:0] axi_master_awsize,
	output wire [1:0] axi_master_awlock,
	output wire [2:0] axi_master_awprot,
	output wire [3:0] axi_master_awcache,
	output wire [3:0] axi_master_awqos,
	output wire [3:0] axi_master_awregion,
	output wire axi_master_wvalid,
	input  wire axi_master_wready,
	output wire axi_master_wlast,
	output wire [63:0] axi_master_wdata,
	output wire [7:0] axi_master_wstrb,
	input  wire axi_master_bvalid,
	output wire axi_master_bready,
	input  wire [1:0] axi_master_bresp,
	output wire axi_master_arvalid,
	input  wire axi_master_arready,
	output wire [31:0] axi_master_araddr,
	output wire [1:0] axi_master_arburst,
	output wire [7:0] axi_master_arlen,
	output wire [3:0] axi_master_arsize,
	output wire [1:0] axi_master_arlock,
	output wire [2:0] axi_master_arprot,
	output wire [3:0] axi_master_arcache,
	output wire [3:0] axi_master_arqos,
	output wire [3:0] axi_master_arregion,
	input  wire axi_master_rvalid,
	output wire axi_master_rready,
	input  wire axi_master_rlast,
	input  wire [1:0] axi_master_rresp,
	input  wire [63:0] axi_master_rdata,
	input  wire spi_sclk,
	input  wire spi_cs,
	output wire [1:0] spi_mode,
	input  wire spi_sdi0,
	input  wire spi_sdi1,
	input  wire spi_sdi2,
	input  wire spi_sdi3,
	output wire spi_sdo0,
	output wire spi_sdo1,
	output wire spi_sdo2,
	output wire spi_sdo3,
	input  wire test_mode
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire sys_clk;
wire sys_rst;
wire aw_valid;
wire aw_ready;
wire [31:0] aw_payload_addr;
wire [1:0] aw_payload_burst;
wire [7:0] aw_payload_len;
wire [3:0] aw_payload_size;
wire [1:0] aw_payload_lock;
wire [2:0] aw_payload_prot;
wire [3:0] aw_payload_cache;
wire [3:0] aw_payload_qos;
wire [3:0] aw_payload_region;
wire [2:0] aw_param_id;
wire aw_param_user;
wire w_valid;
wire w_ready;
wire w_last;
wire [63:0] w_payload_data;
wire [7:0] w_payload_strb;
wire w_param_user;
wire b_valid;
wire b_ready;
wire [1:0] b_payload_resp;
reg  [2:0] b_param_id = 3'd0;
reg  b_param_user = 1'd0;
wire ar_valid;
wire ar_ready;
wire [31:0] ar_payload_addr;
wire [1:0] ar_payload_burst;
wire [7:0] ar_payload_len;
wire [3:0] ar_payload_size;
wire [1:0] ar_payload_lock;
wire [2:0] ar_payload_prot;
wire [3:0] ar_payload_cache;
wire [3:0] ar_payload_qos;
wire [3:0] ar_payload_region;
wire [2:0] ar_param_id;
wire ar_param_user;
wire r_valid;
wire r_ready;
wire r_last;
wire [1:0] r_payload_resp;
wire [63:0] r_payload_data;
reg  [2:0] r_param_id = 3'd0;
reg  r_param_user = 1'd0;
wire spi_slave_test_mode;
wire spi_slave_spi_sclk;
wire spi_slave_spi_cs;
wire [1:0] spi_slave_spi_mode;
wire spi_slave_spi_sdi0;
wire spi_slave_spi_sdi1;
wire spi_slave_spi_sdi2;
wire spi_slave_spi_sdi3;
wire spi_slave_spi_sdo0;
wire spi_slave_spi_sdo1;
wire spi_slave_spi_sdo2;
wire spi_slave_spi_sdo3;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign sys_clk = axi_aclk;
assign sys_rst = axi_aresetn;
assign axi_master_awvalid = aw_valid;
assign axi_master_awaddr = aw_payload_addr;
assign axi_master_awburst = aw_payload_burst;
assign axi_master_awlen = aw_payload_len;
assign axi_master_awsize = aw_payload_size;
assign axi_master_awlock = aw_payload_lock;
assign axi_master_awprot = aw_payload_prot;
assign axi_master_awcache = aw_payload_cache;
assign axi_master_awqos = aw_payload_qos;
assign axi_master_awregion = aw_payload_region;
assign aw_ready = axi_master_awready;
assign axi_master_wvalid = w_valid;
assign axi_master_wdata = w_payload_data;
assign axi_master_wstrb = w_payload_strb;
assign axi_master_wlast = w_last;
assign w_ready = axi_master_wready;
assign b_valid = axi_master_bvalid;
assign b_payload_resp = axi_master_bresp;
assign axi_master_bready = b_ready;
assign axi_master_arvalid = ar_valid;
assign axi_master_araddr = ar_payload_addr;
assign axi_master_arburst = ar_payload_burst;
assign axi_master_arlen = ar_payload_len;
assign axi_master_arsize = ar_payload_size;
assign axi_master_arlock = ar_payload_lock;
assign axi_master_arprot = ar_payload_prot;
assign axi_master_arcache = ar_payload_cache;
assign axi_master_arqos = ar_payload_qos;
assign axi_master_arregion = ar_payload_region;
assign ar_ready = axi_master_arready;
assign r_valid = axi_master_rvalid;
assign r_payload_resp = axi_master_rresp;
assign r_payload_data = axi_master_rdata;
assign r_last = axi_master_rlast;
assign axi_master_rready = r_ready;
assign spi_slave_spi_sclk = spi_sclk;
assign spi_slave_spi_cs = spi_cs;
assign spi_slave_spi_sdi0 = spi_sdi0;
assign spi_slave_spi_sdi1 = spi_sdi1;
assign spi_slave_spi_sdi2 = spi_sdi2;
assign spi_slave_spi_sdi3 = spi_sdi3;
assign spi_mode = spi_slave_spi_mode;
assign spi_sdo0 = spi_slave_spi_sdo0;
assign spi_sdo1 = spi_slave_spi_sdo1;
assign spi_sdo2 = spi_slave_spi_sdo2;
assign spi_sdo3 = spi_slave_spi_sdo3;
assign spi_slave_test_mode = test_mode;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

axi_spi_slave #(
	.AXI_ADDR_WIDTH(6'd32),
	.AXI_DATA_WIDTH(7'd64),
	.AXI_ID_WIDTH(2'd3),
	.AXI_USER_WIDTH(3'd6),
	.DUMMY_CYCLES(6'd32)
) axi_spi_slave (
	.axi_aclk(sys_clk),
	.axi_aresetn(sys_rst),
	.axi_master_ar_ready(ar_ready),
	.axi_master_aw_ready(aw_ready),
	.axi_master_b_id(b_param_id),
	.axi_master_b_resp(b_payload_resp),
	.axi_master_b_user(b_param_user),
	.axi_master_b_valid(b_valid),
	.axi_master_r_data(r_payload_data),
	.axi_master_r_id(r_param_id),
	.axi_master_r_last(r_last),
	.axi_master_r_resp(r_payload_resp),
	.axi_master_r_user(r_param_user),
	.axi_master_r_valid(r_valid),
	.axi_master_w_ready(w_ready),
	.spi_cs(spi_slave_spi_cs),
	.spi_sclk(spi_slave_spi_sclk),
	.spi_sdi0(spi_slave_spi_sdi0),
	.spi_sdi1(spi_slave_spi_sdi1),
	.spi_sdi2(spi_slave_spi_sdi2),
	.spi_sdi3(spi_slave_spi_sdi3),
	.test_mode(spi_slave_test_mode),
	.axi_master_ar_addr(ar_payload_addr),
	.axi_master_ar_burst(ar_payload_burst),
	.axi_master_ar_cache(ar_payload_cache),
	.axi_master_ar_id(ar_param_id),
	.axi_master_ar_len(ar_payload_len),
	.axi_master_ar_lock(ar_payload_lock),
	.axi_master_ar_prot(ar_payload_prot),
	.axi_master_ar_qos(ar_payload_qos),
	.axi_master_ar_region(ar_payload_region),
	.axi_master_ar_size(ar_payload_size),
	.axi_master_ar_user(ar_param_user),
	.axi_master_ar_valid(ar_valid),
	.axi_master_aw_addr(aw_payload_addr),
	.axi_master_aw_burst(aw_payload_burst),
	.axi_master_aw_cache(aw_payload_cache),
	.axi_master_aw_id(aw_param_id),
	.axi_master_aw_len(aw_payload_len),
	.axi_master_aw_lock(aw_payload_lock),
	.axi_master_aw_prot(aw_payload_prot),
	.axi_master_aw_qos(aw_payload_qos),
	.axi_master_aw_region(aw_payload_region),
	.axi_master_aw_size(aw_payload_size),
	.axi_master_aw_user(aw_param_user),
	.axi_master_aw_valid(aw_valid),
	.axi_master_b_ready(b_ready),
	.axi_master_r_ready(r_ready),
	.axi_master_w_data(w_payload_data),
	.axi_master_w_last(w_last),
	.axi_master_w_strb(w_payload_strb),
	.axi_master_w_user(w_param_user),
	.axi_master_w_valid(w_valid),
	.spi_mode(spi_slave_spi_mode),
	.spi_sdo0(spi_slave_spi_sdo0),
	.spi_sdo1(spi_slave_spi_sdo1),
	.spi_sdo2(spi_slave_spi_sdo2),
	.spi_sdo3(spi_slave_spi_sdo3)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-09-19 12:53:23.
//------------------------------------------------------------------------------
