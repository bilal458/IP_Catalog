// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : i2c_slave_wrapper.v
// Device     : gemini
// LiteX sha1 : 15f72174
// Date       : 2022-09-14 20:21:12
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module i2c_slave_wrapper (
	input  wire axil_clk,
	input  wire axil_rst,
	output wire axil_awvalid,
	input  wire axil_awready,
	output wire [15:0] axil_awaddr,
	output wire [2:0] axil_awprot,
	output wire axil_wvalid,
	input  wire axil_wready,
	output wire [31:0] axil_wdata,
	output wire [3:0] axil_wstrb,
	input  wire axil_bvalid,
	output wire axil_bready,
	input  wire [1:0] axil_bresp,
	output wire axil_arvalid,
	input  wire axil_arready,
	output wire [15:0] axil_araddr,
	output wire [2:0] axil_arprot,
	input  wire axil_rvalid,
	output wire axil_rready,
	input  wire [1:0] axil_rresp,
	input  wire [31:0] axil_rdata,
	input  wire i2c_scl_i,
	output wire i2c_scl_o,
	output wire i2c_scl_t,
	input  wire i2c_sda_i,
	output wire i2c_sda_o,
	output wire i2c_sda_t,
	input  wire config_enable,
	input  wire [6:0] config_device_address,
	output wire status_busy,
	output wire status_bus_addressed,
	output wire status_bus_active
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire sys_clk;
wire sys_rst;
wire aw_valid;
wire aw_ready;
wire [15:0] aw_payload_addr;
wire [2:0] aw_payload_prot;
wire w_valid;
wire w_ready;
wire [31:0] w_payload_data;
wire [3:0] w_payload_strb;
wire b_valid;
wire b_ready;
wire [1:0] b_payload_resp;
wire ar_valid;
wire ar_ready;
wire [15:0] ar_payload_addr;
wire [2:0] ar_payload_prot;
wire r_valid;
wire r_ready;
wire [1:0] r_payload_resp;
wire [31:0] r_payload_data;
wire i2c_slave_i2c_scl_i;
wire i2c_slave_i2c_scl_o;
wire i2c_slave_i2c_scl_t;
wire i2c_slave_i2c_sda_i;
wire i2c_slave_i2c_sda_o;
wire i2c_slave_i2c_sda_t;
wire i2c_slave_busy;
wire i2c_slave_bus_addressed;
wire i2c_slave_bus_active;
wire i2c_slave_enable;
wire [6:0] i2c_slave_device_address;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign sys_clk = axil_clk;
assign sys_rst = axil_rst;
assign axil_awvalid = aw_valid;
assign axil_awaddr = aw_payload_addr;
assign axil_awprot = aw_payload_prot;
assign aw_ready = axil_awready;
assign axil_wvalid = w_valid;
assign axil_wdata = w_payload_data;
assign axil_wstrb = w_payload_strb;
assign w_ready = axil_wready;
assign b_valid = axil_bvalid;
assign b_payload_resp = axil_bresp;
assign axil_bready = b_ready;
assign axil_arvalid = ar_valid;
assign axil_araddr = ar_payload_addr;
assign axil_arprot = ar_payload_prot;
assign ar_ready = axil_arready;
assign r_valid = axil_rvalid;
assign r_payload_resp = axil_rresp;
assign r_payload_data = axil_rdata;
assign axil_rready = r_ready;
assign i2c_slave_i2c_scl_i = i2c_scl_i;
assign i2c_scl_o = i2c_slave_i2c_scl_o;
assign i2c_scl_t = i2c_slave_i2c_scl_t;
assign i2c_slave_i2c_sda_i = i2c_sda_i;
assign i2c_sda_o = i2c_slave_i2c_sda_o;
assign i2c_sda_t = i2c_slave_i2c_sda_t;
assign i2c_slave_enable = config_enable;
assign i2c_slave_device_address = config_device_address;
assign status_busy = i2c_slave_busy;
assign status_bus_addressed = i2c_slave_bus_addressed;
assign status_bus_active = i2c_slave_bus_active;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

i2c_slave_axil_master #(
	.ADDR_WIDTH(5'd16),
	.DATA_WIDTH(6'd32),
	.FILTER_LEN(3'd4)
) i2c_slave_axil_master (
	.clk(sys_clk),
	.device_address(i2c_slave_device_address),
	.enable(i2c_slave_enable),
	.i2c_scl_i(i2c_slave_i2c_scl_i),
	.i2c_sda_i(i2c_slave_i2c_sda_i),
	.m_axil_arready(ar_ready),
	.m_axil_awready(aw_ready),
	.m_axil_bresp(b_payload_resp),
	.m_axil_bvalid(b_valid),
	.m_axil_rdata(r_payload_data),
	.m_axil_rresp(r_payload_resp),
	.m_axil_rvalid(r_valid),
	.m_axil_wready(w_ready),
	.rst(sys_rst),
	.bus_active(i2c_slave_bus_active),
	.bus_addressed(i2c_slave_bus_addressed),
	.busy(i2c_slave_busy),
	.i2c_scl_o(i2c_slave_i2c_scl_o),
	.i2c_scl_t(i2c_slave_i2c_scl_t),
	.i2c_sda_o(i2c_slave_i2c_sda_o),
	.i2c_sda_t(i2c_slave_i2c_sda_t),
	.m_axil_araddr(ar_payload_addr),
	.m_axil_arprot(ar_payload_prot),
	.m_axil_arvalid(ar_valid),
	.m_axil_awaddr(aw_payload_addr),
	.m_axil_awprot(aw_payload_prot),
	.m_axil_awvalid(aw_valid),
	.m_axil_bready(b_ready),
	.m_axil_rready(r_ready),
	.m_axil_wdata(w_payload_data),
	.m_axil_wstrb(w_payload_strb),
	.m_axil_wvalid(w_valid)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-09-14 20:21:12.
//------------------------------------------------------------------------------
